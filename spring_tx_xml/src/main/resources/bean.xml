<?xml version="1.0" encoding="utf-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="
http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans.xsd
http://www.springframework.org/schema/tx
http://www.springframework.org/schema/tx/spring-tx.xsd
http://www.springframework.org/schema/aop
http://www.springframework.org/schema/aop/spring-aop.xsd">
  <bean id="accountService" class="com.service.impl.AccountServiceImpl">
      <property name="accountDao" ref="accountDao"></property>
  </bean>
    <bean id="accountDao" class="com.dao.impl.AccountDaoImpl">
        <property name="jdbcTemplate" ref="jdbcTemplate"></property>
    </bean>

    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
       <property name="dataSource" ref="dataSource"></property>
    </bean>
    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="com.mysql.jdbc.Driver"></property>
        <property name="url" value="jdbc:mysql://localhost:3306/account"></property>
        <property name="username" value="root"></property>
        <property name="password" value="root"></property>
    </bean>
    <!--spring中基于xml的声明式事务控制配置步骤
     1.配置事务管理器
     2.配置事务的通知
     3.配置aop中的通用切入点表达式
     4.建立事务通知和切入点表达式的关系
     5.配置事务的属性
         isolation：用于指定事务的隔离级别，默认值是DEFAULT,表示使用数据库的默认隔离级别
         no-rollback-for：用于指定一个异常，当产生该异常时，事务不回滚，产生其他异常时，事务回滚。没有默认值，表示任何异常都回滚
         propagation：用于指定事务的传播行为，默认值是REQUIRED，表示一定会有事务，增删改的选择。查询选择SUPPORTS
         read-only=：用于指定事务是否只读，只有查询方法才能设置为true，默认值为false，表示可读写
         rollback-for：用于指定一个异常，当产生该异常时，事务回滚，产生其他异常时，事务不回滚。没有默认值，表示任何异常都回滚
         timeout：用于指定事务的超时时间，默认值是-1，表示永不超时，如果指定数值，则单位为秒-->

    <!--配置事务管理器-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"></property>
    </bean>
    <!--配置事务的通知 引用spring为我们提供的事务管理器，该管理器中有事务的提交和回滚-->
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <!--name="transfer" 表示业务层需要事务控制的方法名称  可以使用*来进行通配-->
            <tx:method name="*" propagation="REQUIRED" read-only="false"/>
            <!--专门配置查询方法的事务属性-->
            <tx:method name="find*" propagation="SUPPORTS" read-only="true"/>
        </tx:attributes>
    </tx:advice>
    <!--配置aop-->
    <aop:config>
        <!--配置aop中的通用切入点表达式-->
        <aop:pointcut id="pt" expression="execution(* com.service.impl.*.*(..))"></aop:pointcut>
        <!--建立事务通知和切入点表达式的关系-->
        <aop:advisor advice-ref="txAdvice" pointcut-ref="pt"></aop:advisor>
    </aop:config>
</beans>