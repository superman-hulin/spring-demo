<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop" xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd">

    <bean id="accountService" class="com.service.impl.AccountServiceImpl"></bean>
    <!--spring中基于xml的aop配置步骤
         1.把通知bean也配到容器
         2.使用aop:config标签表明开始aop的配置
         3.使用aop:aspect标签表明配置切面
            id属性：是给切面提供一个唯一标识
            ref属性：是指定通知类bean的id
         4.在aop:aspect标签内部使用相应的标签来配置通知的类型
             aop:before 表示配置前置通知
                method属性：用于指定通知bean中哪个方法是前置通知
                pointcut属性：用于指定切入点表达式，该表达式的含义是指对业务层中哪些方法增强
                切入点表达式的写法：execution(表达式)
                 表达式的写法： 访问修饰符（可省略） 返回值 包名.包名.类名.方法名（参数列表）
                    返回值可以使用通配符*来表示任意返回值
                    包名也可以使用通配符* 并且可以使用..表示当前包及其子包 如*..表示任意包及任意包下的子包
                    类名和方法名都可以使用通配符*
                    参数列表：
                      基本类型直接写名称，如int
                      引用类型写包名.类名 如java.lang.String
                      当有参数时，可以使用通配符*表示任意类型
                      也可以用..表示有无参数均可，有参数时为任意参数-->
    <bean id="logger" class="com.untils.Logger"></bean>
    <!--配置aop-->
    <aop:config>
        <!--配置切面-->
        <aop:aspect id="logAdvice" ref="logger">
            <aop:before method="beforePrintLog" pointcut="execution(* com.service.impl.*.*(..))"></aop:before>
            <aop:after-returning method="afterPrintLog" pointcut="execution(* com.service.impl.*.*(..))"></aop:after-returning>
            <aop:after-throwing method="throwingPrintLog" pointcut="execution(* com.service.impl.*.*(..))"></aop:after-throwing>
            <aop:after method="finalPrintLog" pointcut-ref="pt"></aop:after>
            <!--配置切入点表达式 这样上面可以使用pointcut-ref进行引用，而无需重复写
              如果写在<aop:aspect>标签里面，则只能该切面生效，如果写在标签外面（要写在所有切面的前面），则所有切面可用-->
            <aop:pointcut id="pt" expression="execution(* com.service.impl.*.*(..))"></aop:pointcut>
            <!--配置环绕通知-->
            <aop:around method="aroundPrintLog" pointcut-ref="pt"></aop:around>
        </aop:aspect>
    </aop:config>


</beans>